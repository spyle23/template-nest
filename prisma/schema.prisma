// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

enum Entity {
  USER
  PRODUCT
  COMMAND
}

model Auth {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  User     User?
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  adress       String
  isAdmin      Boolean
  commands     Command[]
  notification Notification[]
  auth         Auth           @relation(fields: [authId], references: [id])
  authId       Int            @unique
}

model Product {
  id             Int              @id @default(autoincrement())
  name           String
  description    String
  price          Float
  stock          Int
  Category       Category?        @relation(name: "product-category", fields: [categoryId], references: [id])
  categoryId     Int
  notification   Notification[]
  commandProduct CommandProduct[]
}

model Category {
  id           Int        @id @default(autoincrement())
  name         String
  isCategory   Boolean
  products     Product[]  @relation("product-category")
  sousCategory Category[] @relation("sous-category")
  Category     Category?  @relation("sous-category", fields: [categoryId], references: [id])
  categoryId   Int?
}

model Command {
  id             Int              @id @default(autoincrement())
  payed          Boolean
  totalPrice     Float
  User           User?            @relation(fields: [userId], references: [id])
  userId         Int
  commandProduct CommandProduct[]
  notification   Notification[]
}

model CommandProduct {
  Product   Product @relation(fields: [productId], references: [id])
  productId Int
  Command   Command @relation(fields: [commandId], references: [id])
  commandId Int

  @@id([productId, commandId])
}

model Notification {
  id      Int     @id @default(autoincrement())
  isAdmin Boolean
  entity  Entity

  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  Command   Command? @relation(fields: [commandId], references: [id])
  commandId Int?
}
